package org.ndx.codingame.ghostinthecell;

import static org.assertj.core.api.Assertions.assertThat;

import org.junit.Test;
import org.ndx.codingame.ghostinthecell.playground.Playfield;


public class InGameTest {
	// @PerfTest(invocations = INVOCATION_COUNT, threads = THREAD_COUNT) @Required(percentile99=PERCENTILE)
	@Test public void can_find_move_1488732350621() {
		final Playfield p = new PlayfieldBuilder().at(2)
		.i(0, 0, 0, 0)
		.f(0).t(1).d(1).t(2).d(1).t(3).d(7).t(4).d(7).t(5).d(6).t(6).d(6).t(7).d(3).t(8).d(3).t(9).d(8).t(10).d(8).t(11).d(2).t(12).d(2)
		.i(1, 1, 0, 0)
		.f(1).t(0).d(1).t(2).d(3).t(3).d(5).t(4).d(10).t(5).d(4).t(6).d(8).t(7).d(1).t(8).d(5).t(9).d(6).t(10).d(10).t(11).d(2).t(12).d(3)
		.i(2, -1, 0, 0)
		.f(2).t(0).d(1).t(1).d(3).t(3).d(10).t(4).d(5).t(5).d(8).t(6).d(4).t(7).d(5).t(8).d(1).t(9).d(10).t(10).d(6).t(11).d(3).t(12).d(2)
		.i(3, 0, 0, 0)
		.f(3).t(0).d(7).t(1).d(5).t(2).d(10).t(4).d(16).t(5).d(2).t(6).d(14).t(7).d(4).t(8).d(11).t(9).d(3).t(10).d(16).t(11).d(7).t(12).d(8)
		.i(4, 0, 0, 0)
		.f(4).t(0).d(7).t(1).d(10).t(2).d(5).t(3).d(16).t(5).d(14).t(6).d(2).t(7).d(11).t(8).d(4).t(9).d(16).t(10).d(3).t(11).d(8).t(12).d(7)
		.i(5, 0, 9, 2)
		.f(5).t(0).d(6).t(1).d(4).t(2).d(8).t(3).d(2).t(4).d(14).t(6).d(13).t(7).d(4).t(8).d(9).t(9).d(5).t(10).d(14).t(11).d(7).t(12).d(6)
		.i(6, 0, 9, 2)
		.f(6).t(0).d(6).t(1).d(8).t(2).d(4).t(3).d(14).t(4).d(2).t(5).d(13).t(7).d(9).t(8).d(4).t(9).d(14).t(10).d(5).t(11).d(6).t(12).d(7)
		.i(7, 1, 1, 1)
		.f(7).t(0).d(3).t(1).d(1).t(2).d(5).t(3).d(4).t(4).d(11).t(5).d(4).t(6).d(9).t(8).d(7).t(9).d(4).t(10).d(12).t(11).d(2).t(12).d(5)
		.i(8, -1, 20, 1)
		.f(8).t(0).d(3).t(1).d(5).t(2).d(1).t(3).d(11).t(4).d(4).t(5).d(9).t(6).d(4).t(7).d(7).t(9).d(12).t(10).d(4).t(11).d(5).t(12).d(2)
		.i(9, 0, 4, 1)
		.f(9).t(0).d(8).t(1).d(6).t(2).d(10).t(3).d(3).t(4).d(16).t(5).d(5).t(6).d(14).t(7).d(4).t(8).d(12).t(10).d(18).t(11).d(7).t(12).d(10)
		.i(10, 0, 4, 1)
		.f(10).t(0).d(8).t(1).d(10).t(2).d(6).t(3).d(16).t(4).d(3).t(5).d(14).t(6).d(5).t(7).d(12).t(8).d(4).t(9).d(18).t(11).d(10).t(12).d(7)
		.i(11, 0, 6, 2)
		.f(11).t(0).d(2).t(1).d(2).t(2).d(3).t(3).d(7).t(4).d(8).t(5).d(7).t(6).d(6).t(7).d(2).t(8).d(5).t(9).d(7).t(10).d(10).t(12).d(5)
		.i(12, 0, 6, 2)
		.f(12).t(0).d(2).t(1).d(3).t(2).d(2).t(3).d(8).t(4).d(7).t(5).d(6).t(6).d(7).t(7).d(5).t(8).d(2).t(9).d(10).t(10).d(7).t(11).d(5)
		.t(1,5,1,5,3)
		.b(1, 8, 5)
		.t(1,11,1,7,1)
		.t(1,12,1,7,2)
;
		assertThat(p.compute()).doesNotContain("BOMB 7 8");
	}
}
